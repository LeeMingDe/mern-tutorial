{"version":3,"sources":["shared/components/UIElement/Card.js","shared/components/UIElement/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qHAAA,sBAYeA,IARF,SAAAC,GACX,OACE,qBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAxD,SACGF,EAAMG,a,8NCSEC,EAZA,SAAAJ,GACb,OACE,qBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAA1D,SACE,qBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCiBpCE,G,MApBE,SAAAV,GACb,OACI,oBAAIC,UAAU,YAAd,SACI,cAACF,EAAA,EAAD,CAAME,UAAU,qBAAhB,SACI,eAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,WAAR,UACA,qBAAKX,UAAU,mBAAf,SACI,cAAC,EAAD,CAAQK,MAAK,UAAKO,qCAAL,YAAwCb,EAAMM,OAASC,IAAKP,EAAMc,SAEnF,sBAAKb,UAAU,kBAAf,UACI,6BAAKD,EAAMc,OACX,+BACKd,EAAMe,WADX,IAC6C,IAArBf,EAAMe,WAAmB,QAAU,wBCchEC,G,MA1BG,SAAAhB,GACd,OAA2B,IAAvBA,EAAMiB,MAAMC,OAER,qBAAKjB,UAAU,SAAf,SACI,cAACF,EAAA,EAAD,UACI,qDAOZ,oBAAIE,UAAU,aAAd,SACKD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OACjB,cAAC,EAAD,CAEIR,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKC,OAAOH,QAJnBE,EAAKR,WCgBfU,UA9BD,WACV,MAAsDC,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAeA,OAbAC,qBAAU,YACU,uCAAG,4BAAAC,EAAA,+EAEgBN,EACvBb,gDAHO,OAELoB,EAFK,OAMXH,EAAeG,EAAaC,OANjB,uGAAH,qDAShBC,KACD,CAACT,IAGA,eAAC,IAAMU,SAAP,WACI,cAACC,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QAASX,IAClCH,GACD,qBAAKvB,UAAU,SAAf,SACI,cAACsC,EAAA,EAAD,OAGFf,GAAaK,GAAe,cAAC,EAAD,CAAWZ,MAAOY","file":"static/js/8.7166d3d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElement/Avatar';\r\nimport Card from '../../shared/components/UIElement/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n    return (\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">\r\n                <Link to={`/${props.id}/places`}>\r\n                <div className=\"user-item__image\">\r\n                    <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n                </div>\r\n                <div className=\"user-item__info\">\r\n                    <h2>{props.name}</h2>\r\n                    <h3>\r\n                        {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n                    </h3>\r\n                </div>\r\n                </Link>\r\n            </Card>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElement/Card';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"center\">\r\n                <Card>\r\n                    <h2>No users found.</h2>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"users-list\">\r\n            {props.items.map(user => (\r\n                <UserItem\r\n                    key={user.id}\r\n                    id={user.id}\r\n                    image={user.image}\r\n                    name={user.name}\r\n                    placeCount={user.places.length}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport ErrorModal from '../../shared/components/UIElement/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElement/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport UsersList from '../components/UsersList';\r\n\r\nconst Users = () => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n  \r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    process.env.REACT_APP_BACKEND_URL + '/users'\r\n                );\r\n        \r\n                setLoadedUsers(responseData.users);\r\n            } catch (err) {}\r\n        };\r\n        fetchUsers();\r\n    }, [sendRequest]);\r\n  \r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n            )}\r\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n        </React.Fragment>\r\n        );\r\n  };\r\n\r\nexport default Users;"],"sourceRoot":""}