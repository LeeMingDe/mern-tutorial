{"version":3,"sources":["shared/components/UIElement/Card.js","shared/components/UIElement/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"qHAAA,sBAYeA,IARF,SAAAC,GACX,OACE,qBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAxD,SACGF,EAAMG,a,8OCoBEC,EAvBH,SAAAJ,GACV,IAAMK,EAASC,mBAEPC,EAAiBP,EAAjBO,OAAQC,EAASR,EAATQ,KAWhB,OATAC,qBAAU,WACR,IAAMC,EAAM,IAAIC,OAAOC,OAAOC,KAAKT,IAAIC,EAAOS,QAAS,CACrDP,OAAQA,EACRC,KAAMA,IAGR,IAAIG,OAAOC,OAAOC,KAAKE,OAAO,CAAEC,SAAUT,EAAQG,IAAKA,MACtD,CAACH,EAAQC,IAGV,qBACES,IAAKZ,EACLJ,UAAS,cAASD,EAAMC,WACxBC,MAAOF,EAAME,S,gBCkFJgB,G,MA5FG,SAAAlB,GACd,MAAsDmB,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACjCC,EAAOC,qBAAWC,KACxB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KAIMC,EAAkB,kBAAMH,GAAW,IAMnCI,EAAsB,WACxBF,GAAoB,IAGlBG,EAAoB,uCAAG,sBAAAC,EAAA,6DACzBJ,GAAoB,GADK,kBAGfT,EACFc,yCAAA,kBAA+CpC,EAAMqC,IACrD,SACA,KACA,CACIC,cAAe,UAAYd,EAAKe,QARnB,OAWrBvC,EAAMwC,SAASxC,EAAMqC,IAXA,uGAAH,qDAe1B,OACI,eAAC,IAAMI,SAAP,WACI,cAACC,EAAA,EAAD,CAAYrB,MAAOA,EAAOsB,QAASpB,IACnC,cAACqB,EAAA,EAAD,CACIC,KAAMjB,EACNkB,SAAUd,EACVe,OAAQ/C,EAAMgD,QACdC,aAAa,4BACbC,YAAY,2BACZC,OAAQ,cAACC,EAAA,EAAD,CAAQC,QAASrB,EAAjB,mBANZ,SAQI,qBAAK/B,UAAU,gBAAf,SACI,cAAC,EAAD,CAAKM,OAAQP,EAAMsD,YAAa9C,KAAM,SAG9C,cAACoC,EAAA,EAAD,CACIC,KAAMf,EACNgB,SAAUb,EACVc,OAAO,gBACPG,YAAY,4BACZC,OACI,eAAC,IAAMV,SAAP,WACI,cAACW,EAAA,EAAD,CAAQG,SAAO,EAACF,QAASpB,EAAzB,oBACA,cAACmB,EAAA,EAAD,CAAQI,QAAM,EAACH,QAASnB,EAAxB,uBARZ,SAWI,yDAEJ,oBAAIjC,UAAU,aAAd,SACI,eAACF,EAAA,EAAD,CAAME,UAAU,sBAAhB,UACKmB,GAAa,cAACqC,EAAA,EAAD,CAAgBC,WAAS,IACvC,qBAAKzD,UAAU,oBAAf,SACI,qBAAK0D,IAAG,UAAKvB,qCAAL,YAAwCpC,EAAM4D,OAASC,IAAK7D,EAAM8D,UAE9E,sBAAK7D,UAAU,mBAAf,UACI,6BAAKD,EAAM8D,QACX,6BAAK9D,EAAMgD,UACX,4BAAIhD,EAAM+D,iBAEd,sBAAK9D,UAAU,sBAAf,UACI,cAACmD,EAAA,EAAD,CAAQG,SAAO,EAACF,QAnEb,kBAAMxB,GAAW,IAmEpB,yBACCL,EAAKwC,SAAWhE,EAAMiE,WACnB,cAACb,EAAA,EAAD,CAAQc,GAAE,kBAAalE,EAAMqC,IAA7B,kBAIHb,EAAKwC,SAAWhE,EAAMiE,WACnB,cAACb,EAAA,EAAD,CAAQI,QAAM,EAACH,QAtEN,WAC7BtB,GAAoB,IAqEA,iCCxDboC,G,MA7BG,SAAAnE,GACd,OAA2B,IAAvBA,EAAMoE,MAAMC,OAER,qBAAKpE,UAAU,oBAAf,SACI,eAACF,EAAA,EAAD,WACI,oEACA,cAACqD,EAAA,EAAD,CAAQc,GAAG,cAAX,8BAMT,oBAAIjE,UAAU,aAAd,SACFD,EAAMoE,MAAM1D,KAAI,SAAA4D,GAAK,OAClB,cAAC,EAAD,CAEIjC,GAAIiC,EAAMjC,GACVuB,MAAOU,EAAMV,MACbE,MAAOQ,EAAMR,MACbC,YAAaO,EAAMP,YACnBf,QAASsB,EAAMtB,QACfiB,UAAWK,EAAMC,QACjBjB,YAAagB,EAAME,SACnBhC,SAAUxC,EAAMyE,eARXH,EAAMjC,WCyBZqC,UAvCI,WACf,MAAwC/C,qBAAxC,mBAAOgD,EAAP,KAAqBC,EAArB,KACA,EAAsDzD,cAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WAEjCyC,EAASa,cAAYb,OAE3BvD,qBAAU,YACW,uCAAG,4BAAA0B,EAAA,+EAEeb,EACvBc,yCAAA,uBAAoD4B,IAH5C,OAENc,EAFM,OAKZF,EAAgBE,EAAaC,QALjB,uGAAH,qDAQjBC,KACD,CAAC1D,EAAa0C,IAQrB,OACI,eAAC,IAAMvB,SAAP,WACI,cAACC,EAAA,EAAD,CAAYrB,MAAOA,EAAOsB,QAASpB,IAClCH,GACG,qBAAKnB,UAAU,SAAf,SACI,cAACwD,EAAA,EAAD,OAGNrC,GAAauD,GACX,cAAC,EAAD,CAAWP,MAAOO,EAAcF,cAfZ,SAAAQ,GACxBL,GAAgB,SAAAM,GAAU,OACtBA,EAAWC,QAAO,SAAAb,GAAK,OAAIA,EAAMjC,KAAO4C","file":"static/js/7.66c9ff85.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n  const mapRef = useRef();\r\n  \r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom\r\n    });\r\n  \r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);  \r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElement/Card';\r\nimport Map from '../../shared/components/UIElement/Map';\r\nimport Modal from '../../shared/components/UIElement/Modal';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModal from '../../shared/components/UIElement/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElement/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = props => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n    const openMapHandler = () => setShowMap(true);\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n\r\n    const showDeleteWarningHandler = () => {\r\n        setShowConfirmModal(true);\r\n    }\r\n\r\n    const cancelDeleteHandler = () => {\r\n        setShowConfirmModal(false);\r\n    }\r\n\r\n    const confirmDeleteHandler = async() => {\r\n        setShowConfirmModal(false);\r\n        try {\r\n            await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            props.onDelete(props.id);\r\n        } catch (err) {}\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Modal\r\n                show={showMap}\r\n                onCancel={closeMapHandler}\r\n                header={props.address}\r\n                contentClass=\"place-item__modal-content\"\r\n                footerClass=\"place-item_modal-actions\"\r\n                footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n            >\r\n                <div className=\"map-container\">\r\n                    <Map center={props.coordinates} zoom={16}/>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                show={showConfirmModal}\r\n                onCancel={cancelDeleteHandler}\r\n                header=\"Are you sure?\"\r\n                footerClass=\"place-item__modal-actions\"\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\r\n                        <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\r\n                    </React.Fragment>\r\n                }>\r\n                <p>Proceed with deletion?</p>\r\n            </Modal>\r\n            <li className=\"place-item\">\r\n                <Card className=\"place-item__content\">\r\n                    {isLoading && <LoadingSpinner asOverlay />}\r\n                    <div className=\"place-item__image\">\r\n                        <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n                    </div>\r\n                    <div className=\"place-item__info\">\r\n                        <h2>{props.title}</h2>\r\n                        <h3>{props.address}</h3>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className=\"place-item__actions\">\r\n                        <Button inverse onClick={openMapHandler}>VIEW ON MAP</Button>\r\n                        {auth.userId === props.creatorId && (\r\n                            <Button to={`/places/${props.id}`}>\r\n                                EDIT\r\n                            </Button>\r\n                        )}\r\n                        {auth.userId === props.creatorId && (\r\n                            <Button danger onClick={showDeleteWarningHandler}>\r\n                                DELETE\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </Card>\r\n            </li>\r\n        </React.Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default PlaceItem;","import React from 'react';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n\r\nimport Card from '../../shared/components/UIElement/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"place-list center\">\r\n                <Card>\r\n                    <h2>No places found. Maybe create one?</h2>\r\n                    <Button to=\"/places/new\">Share Place</Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <ul className=\"place-list\">\r\n        {props.items.map(place => (\r\n            <PlaceItem \r\n                key={place.id}\r\n                id={place.id}\r\n                image={place.image}\r\n                title={place.title}\r\n                description={place.description}\r\n                address={place.address}\r\n                creatorId={place.creator}\r\n                coordinates={place.location}\r\n                onDelete={props.onDeletePlace}\r\n            />\r\n        ))}\r\n    </ul>\r\n};\r\n\r\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport ErrorModal from '../../shared/components/UIElement/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElement/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport PlaceList from '../components/PlaceList';\r\n\r\nconst UserPlaces = () => {\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(() => {\r\n        const fetchPlaces = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    process.env.REACT_APP_BACKEND_URL + `/places/user/${userId}`\r\n                );\r\n                setLoadedPlaces(responseData.places);\r\n            } catch (err) {}\r\n        };\r\n        fetchPlaces();\r\n    }, [sendRequest, userId]);\r\n\r\n    const placeDeletedHandler = deletedPlaceId => {\r\n        setLoadedPlaces(prevPlaces =>\r\n            prevPlaces.filter(place => place.id !== deletedPlaceId)\r\n        );\r\n    };\r\n\r\nreturn (\r\n    <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError} />\r\n        {isLoading && (\r\n            <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        )}\r\n        {!isLoading && loadedPlaces && (\r\n            <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n        )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;"],"sourceRoot":""}