{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElement/LoadingSpinner.js","shared/components/UIElement/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","nodeRef","React","useRef","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","ref","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.e1e11814.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(\r\n    {\r\n        isLoggedIn: false,\r\n        userId: null,\r\n        token: null,\r\n        login: () => {},\r\n        logout: () => {} \r\n    }\r\n);","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState();\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n    const [userId, setUserId] = useState();\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n        setToken(token);\r\n        setUserId(uid);\r\n        const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000*60*60);\r\n        setTokenExpirationDate(tokenExpirationDate);\r\n        localStorage.setItem('userData', JSON.stringify({\r\n            userId: uid,\r\n            token: token,\r\n            expiration: tokenExpirationDate.toISOString()}));\r\n    }, []);\r\n  \r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setTokenExpirationDate(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('userData');\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if (token && tokenExpirationDate) {\r\n            const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpirationDate])\r\n\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(localStorage.getItem('userData'));\r\n        if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n        }\r\n    }, [login]);\r\n\r\n    return { token, login, logout, userId };\r\n}","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return <header className=\"main-header\">{props.children}</header>\r\n};\r\n\r\nexport default MainHeader;","import React, { useContext } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul className=\"nav-links\">\r\n            <li>\r\n                <NavLink to=\"/\" exact>ALL USERS</NavLink>\r\n            </li>\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n                </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n                </li>\r\n            )}\r\n            {!auth.isLoggedIn && (\r\n                <li>\r\n                    <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n                </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <button onClick={auth.logout}>LOGOUT</button>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n    const nodeRef = React.useRef(null);\r\n\r\n    const content = (\r\n        <CSSTransition\r\n            nodeRef={nodeRef}\r\n            in={props.show} \r\n            timeout={200} \r\n            classNames=\"slide-in-left\"\r\n            mountOnEnter\r\n            unmountOnExit\r\n        >\r\n            <aside\r\n                ref={nodeRef}\r\n                className=\"side-drawer\" \r\n                onClick={props.onClick}\r\n            >{props.children}</aside>\r\n        </CSSTransition>\r\n    );\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElement/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n    \r\n    const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n    }\r\n\r\n    const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/> }\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n                <nav className=\"main-navigation__drawer-nav\">\r\n                    <NavLinks/>\r\n                </nav>\r\n            </SideDrawer>\r\n            <MainHeader>\r\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n                    <span/>\r\n                    <span/>\r\n                    <span/>\r\n                </button>\r\n                <h1 className=\"main-navigation__title\">\r\n                    <Link to=\"/\">YourPlaces</Link>\r\n                </h1>\r\n                <nav className=\"main-navigation__header-nav\">\r\n                    <NavLinks />\r\n                </nav>\r\n            </MainHeader>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MainNavigation;","import React, { Suspense } from 'react';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport LoadingSpinner from './shared/components/UIElement/LoadingSpinner';\r\nimport { AuthContext } from './shared/context/auth-context';\r\nimport { useAuth } from './shared/hooks/auth-hook';\r\n\r\nconst Users = React.lazy(() => import('./user/pages/Users'));\r\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\r\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\r\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\r\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\r\n\r\nconst App = () => {\r\n    const {token, login, logout, userId } = useAuth();\r\n\r\n    let routes;\r\n\r\n    if (token) {\r\n        routes = (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <Users />\r\n                </Route>\r\n                <Route path=\"/:userId/places\" exact>\r\n                    <UserPlaces />\r\n                </Route>\r\n                <Route path=\"/places/new\" exact>\r\n                    <NewPlace />\r\n                </Route>\r\n                <Route path=\"/places/:placeId\">\r\n                    <UpdatePlace />\r\n                </Route>\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        );\r\n    } else {\r\n        routes = (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <Users/>\r\n                </Route>\r\n                <Route path=\"/:userId/places\" exact>\r\n                    <UserPlaces />\r\n                </Route>\r\n                <Route path=\"/auth\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect to=\"/auth\" />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider \r\n            value={\r\n                {\r\n                    isLoggedIn: !!token,\r\n                    userId: userId,\r\n                    token: token,\r\n                    login: login,\r\n                    logout: logout\r\n                }\r\n            }\r\n        >\r\n            <Router>\r\n                <MainNavigation />\r\n                <main>\r\n                    <Suspense fallback={\r\n                        <div className=\"center\">\r\n                            <LoadingSpinner/>\r\n                        </div>}>\r\n                        {routes}\r\n                    </Suspense>\r\n                </main>\r\n            </Router>\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}