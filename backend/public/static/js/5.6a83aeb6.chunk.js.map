{"version":3,"sources":["util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","push","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/5.6a83aeb6.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useEffect, useReducer } from 'react';\r\n\r\nimport { validate } from '../../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH':\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '', \r\n        isValid: props.initialValid || false,\r\n        isTouched: false\r\n    });\r\n\r\n    const {id, onInput} = props;\r\n    const {value, isValid} = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n    \r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: 'CHANGE', \r\n            val: event.target.value, \r\n            validators: props.validators\r\n        });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type:'TOUCH'\r\n        });\r\n    }\r\n\r\n    const element = props.element === 'input' ? (\r\n        <input\r\n            id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    ) : (\r\n        <textarea\r\n            id={props.id}\r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && \r\n            inputState.isTouched && 'form-control--invalid'}`}\r\n        >\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Input;","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            }\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type:'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const[previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState();\r\n\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (event.target.files || event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{display: 'none'}}\r\n                type=\"file\"\r\n                accept=\".jpg, .png, .jpeg\"\r\n                onChange={pickedHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n                    {!previewUrl && <p>Please pick an image.</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default ImageUpload;","import React, { useContext } from 'react';\r\n\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../util/validators';\r\nimport ErrorModal from '../../shared/components/UIElement/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElement/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './NewPlace.css';\r\nimport { useHistory } from 'react-router';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nconst NewPlace = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            title: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            address: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            image: {\r\n                value: null,\r\n                isValid: false\r\n            }\r\n        },\r\n        false\r\n    );\r\n  \r\n    const history = useHistory();\r\n  \r\n    const placeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('title', formState.inputs.title.value);\r\n            formData.append('description', formState.inputs.description.value);\r\n            formData.append('address', formState.inputs.address.value);\r\n            formData.append('image', formState.inputs.image.value);\r\n\r\n            await sendRequest(\r\n                process.env.REACT_APP_BACKEND_URL + '/places',\r\n                'POST',\r\n                formData,\r\n                {\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            );\r\n            history.push('/');\r\n        } catch (err) {}\r\n    };\r\n  \r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <Input\r\n                    id=\"title\"\r\n                    element=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Title\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid title.\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id=\"description\"\r\n                    element=\"textarea\"\r\n                    label=\"Description\"\r\n                    validators={[VALIDATOR_MINLENGTH(5)]}\r\n                    errorText=\"Please enter a valid description (at least 5 characters).\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id=\"address\"\r\n                    element=\"input\"\r\n                    label=\"Address\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText=\"Please enter a valid address.\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <ImageUpload id=\"image\" onInput={inputHandler} errorText=\"Please provide an image\"/>\r\n                <Button type=\"submit\" disabled={!formState.isValid}>\r\n                    ADD PLACE\r\n                </Button>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default NewPlace;"],"sourceRoot":""}